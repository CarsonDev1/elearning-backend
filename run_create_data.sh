#!/bin/bash

# ================================================
# SCRIPT CH·∫†Y T·∫†O D·ªÆ LI·ªÜU TEST ƒê·ª¢N GI·∫¢N
# ================================================

echo "üöÄ T·∫°o d·ªØ li·ªáu test cho h·ªá th·ªëng E-Learning"
echo "=========================================="

# Colors
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# Check if Spring Boot is running
echo -e "${BLUE}üîç Ki·ªÉm tra server Spring Boot...${NC}"
if curl -s --max-time 3 "http://localhost:8080/api/courses" > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Server ƒëang ch·∫°y!${NC}"
else
    echo -e "${RED}‚ùå Server kh√¥ng ch·∫°y!${NC}"
    echo -e "${YELLOW}üí° Vui l√≤ng start Spring Boot tr∆∞·ªõc:${NC}"
    echo "   cd japanese-learning-platform && mvn spring-boot:run"
    exit 1
fi

# Get database connection info from application.properties
DB_URL=$(grep "spring.datasource.url" src/main/resources/application.properties | cut -d'=' -f2 | sed 's/jdbc:postgresql:\/\///')
DB_HOST=$(echo $DB_URL | cut -d'/' -f1 | cut -d':' -f1)
DB_PORT=$(echo $DB_URL | cut -d'/' -f1 | cut -d':' -f2)
DB_NAME=$(echo $DB_URL | cut -d'/' -f2 | cut -d'?' -f1)
DB_USER=$(grep "spring.datasource.username" src/main/resources/application.properties | cut -d'=' -f2)
DB_PASS=$(grep "spring.datasource.password" src/main/resources/application.properties | cut -d'=' -f2)

echo -e "${BLUE}üìã Th√¥ng tin database:${NC}"
echo "   Host: $DB_HOST"
echo "   Port: $DB_PORT"  
echo "   Database: $DB_NAME"
echo "   User: $DB_USER"

# Check if SQL file exists
if [ ! -f "create_simple_test_data.sql" ]; then
    echo -e "${RED}‚ùå Kh√¥ng t√¨m th·∫•y file create_simple_test_data.sql${NC}"
    exit 1
fi

echo ""
echo -e "${BLUE}üõ†Ô∏è T·∫°o d·ªØ li·ªáu test...${NC}"
echo "S·∫Ω t·∫°o:"
echo "  ‚Ä¢ 6 users (4 tutors, 1 admin, 1 student)"
echo "  ‚Ä¢ 5 courses: Hiragana, Katakana, Kanji, Ng·ªØ ph√°p N5, T·ª´ v·ª±ng N5"
echo "  ‚Ä¢ Modules, lessons, exercises v·ªõi FILL_IN_BLANK v√† MULTIPLE_CHOICE"
echo "  ‚Ä¢ Questions v√† options cho b√†i t·∫≠p"
echo ""

read -p "Ti·∫øp t·ª•c? (y/N): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo -e "${YELLOW}‚ö†Ô∏è ƒê√£ h·ªßy${NC}"
    exit 1
fi

# Run SQL script
echo -e "${BLUE}‚è≥ ƒêang ch·∫°y SQL script...${NC}"

# Try using psql command directly
export PGPASSWORD=$DB_PASS
psql -h $DB_HOST -p $DB_PORT -U $DB_USER -d $DB_NAME -f create_simple_test_data.sql

if [ $? -eq 0 ]; then
    echo ""
    echo -e "${GREEN}‚úÖ T·∫°o d·ªØ li·ªáu th√†nh c√¥ng!${NC}"
    echo ""
    echo -e "${GREEN}üìä D·ªØ li·ªáu ƒë√£ t·∫°o:${NC}"
    echo "  ‚Ä¢ 4 tutors v·ªõi password: password123"
    echo "    - akiko@example.com"
    echo "    - hiroshi@example.com" 
    echo "    - yuki@example.com"
    echo "    - kenji@example.com"
    echo "  ‚Ä¢ 1 admin: admin@example.com (password: password123)"
    echo "  ‚Ä¢ 1 student: student@example.com (password: password123)"
    echo "  ‚Ä¢ 5 courses v·ªõi modules v√† lessons"
    echo "  ‚Ä¢ Exercises: FILL_IN_BLANK v√† MULTIPLE_CHOICE"
    echo ""
    echo -e "${BLUE}üéØ S·∫µn s√†ng test!${NC}"
    echo "   Frontend: http://localhost:3000"
    echo "   Backend:  http://localhost:8080"
    echo ""
    echo -e "${YELLOW}üí° H∆∞·ªõng d·∫´n test:${NC}"
    echo "   1. V√†o m·ªôt course ‚Üí lesson ‚Üí tab exercises"
    echo "   2. Th·ª≠ FILL_IN_BLANK exercises (ƒëi·ªÅn t·ª´ v√†o ch·ªó tr·ªëng)"
    echo "   3. Th·ª≠ MULTIPLE_CHOICE exercises (tr·∫Øc nghi·ªám)"
else
    echo -e "${RED}‚ùå L·ªói khi t·∫°o d·ªØ li·ªáu${NC}"
    echo -e "${YELLOW}üí° C√≥ th·ªÉ th·ª≠ c√°ch kh√°c:${NC}"
    echo "   1. D√πng pgAdmin ho·∫∑c tool GUI kh√°c"
    echo "   2. Copy n·ªôi dung file create_simple_test_data.sql v√† ch·∫°y tr·ª±c ti·∫øp"
    exit 1
fi 